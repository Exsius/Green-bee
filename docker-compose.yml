services:
  db:
    image: mariadb
    restart: always
    environment:
      MARIADB_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - '${DB_PORT}:${DB_PORT}'
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      PMA_ARBITRARY: '1'
      PMA_HOST: db
      PMA_PORT: ${DB_PORT}
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}
    ports:
      - '8888:80'

  redis:
    container_name: greenbee_redis
    restart: unless-stopped
    image: redis:6-alpine
    command: --requirepass ${REDIS_PASSWORD}
    expose:
      - '${REDIS_PORT}'
    env_file:
      - .env
    networks:
      - app-network

  backend:
    container_name: greenbee_backend
    restart: unless-stopped
    build:
      context: .
    ports:
      - '3000:3000'
    environment:
      REDIS_HOST: redis
      DB_HOST: '${DB_HOST}'
      DB_USER: '${DB_USER}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_NAME: '${DB_NAME}'
      SESSION_SECRET: '${SESSION_SECRET}'
      NODE_ENV: 'production'
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network

  webserver:
    image: nginx:mainline-alpine
    container_name: greenbee_webserver
    restart: unless-stopped
    ports:
      - '80:80'
      # - '443:443'
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./dhparam:/etc/ssl/certs
      - ./ssl:/etc/letsencrypt/live/${DOMAIN_NAME}
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: greenbee_certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email ${DOMAIN_EMAIL} --agree-tos --no-eff-email --force-renewal -d ${DOMAIN_NAME} --staging

volumes:
  backend_data:
  db_data:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
  dhparam:
    driver: local

networks:
  app-network:
    driver: bridge

version: '1.0'
